{"version":3,"sources":["components/Togglable.js","components/CategoryForm.js","components/Product.js","components/ProductForm.js","components/ProductTable.js","components/Notification.js","services/products.js","components/Category.js","components/CategoryList.js","components/LoginForm.js","services/categories.js","services/login.js","components/App.js","index.js"],"names":["Togglable","React","forwardRef","props","ref","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","onClick","style","buttonName","children","displayName","CategoryForm","addCategory","name","setName","description","setDescription","onSubmit","e","preventDefault","htmlFor","id","value","onChange","target","Product","product","removeProduct","price","number_in_stock","window","confirm","ProductForm","addProduct","setPrice","inStock","setInStock","type","ProductTable","products","productFormRef","productDiv","length","map","p","key","Notification","message","color","token","create","newProduct","a","config","headers","Authorization","axios","post","response","data","remove","productId","delete","setToken","newToken","Category","category","removeCategory","setProducts","notification","setNotification","useRef","handleAddProduct","productData","current","productService","result","showNotification","concat","handleRemoveProduct","filter","setTimeout","CategoryList","categories","cat","LoginForm","userLogin","username","setUsername","password","setPassword","getAll","get","newCategory","categoryId","login","credentials","App","setCategories","user","setUser","useEffect","categoryService","loadCategories","categoryFormRef","handleLogin","loginData","loginService","localStorage","setItem","JSON","stringify","handleAddCategory","categoryData","handleRemoveCategory","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.ffc7294f.chunk.js","sourcesContent":["import React, { useState, useImperativeHandle } from 'react';\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false);\n\n  const hideWhenVisible = { display: visible ? 'none' : '' };\n  const showWhenVisible = { display: visible ? '' : 'none' };\n\n  const toggleVisibility = () => setVisible(!visible);\n\n  useImperativeHandle(ref, () => {\n    return { toggleVisibility };\n  });\n\n  return (\n    <div>\n      <button onClick={toggleVisibility} style={hideWhenVisible}>\n        {props.buttonName}\n      </button>\n      <div style={showWhenVisible}>\n        {props.children} <button onClick={toggleVisibility}>Close</button>\n      </div>\n    </div>\n  );\n});\n\nTogglable.displayName = 'Togglable';\n\nexport default Togglable;\n","import React, { useState } from 'react';\n\nconst CategoryForm = ({ addCategory }) => {\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n\n  const onAddCategory = (e) => {\n    e.preventDefault();\n\n    addCategory({ name, description });\n\n    setName('');\n    setDescription('');\n  };\n\n  return (\n    <div>\n      <h2>Add Category</h2>\n      <form onSubmit={onAddCategory}>\n        <div>\n          <label htmlFor=\"name\">Name</label>\n          <input\n            id=\"category\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"description\">Description</label>\n          <textarea\n            id=\"category\"\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n          />\n        </div>\n        <button>Add</button>\n      </form>\n    </div>\n  );\n};\n\nexport default CategoryForm;\n","import React from 'react';\n\nconst Product = ({ product, removeProduct }) => {\n  const confirmRemove = () => {\n    if (window.confirm(`Delete product: ${product.name}`)) {\n      removeProduct(product.id);\n    }\n  };\n  return (\n    <tr>\n      <td>{product.name}</td>\n      <td>{product.price}</td>\n      <td>{product.number_in_stock}</td>\n      <td>{product.description}</td>\n      <td>\n        <button onClick={confirmRemove}>Delte</button>\n      </td>\n    </tr>\n  );\n};\n\nexport default Product;\n","import React, { useState } from 'react';\n\nconst ProductForm = ({ addProduct }) => {\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState('');\n  const [inStock, setInStock] = useState('');\n  const [description, setDescription] = useState('');\n\n  const onAddProduct = (e) => {\n    e.preventDefault();\n\n    addProduct({ name, price, description, number_in_stock: inStock });\n\n    setName('');\n    setPrice('');\n    setInStock('');\n    setDescription('');\n  };\n\n  return (\n    <div>\n      <h2>Add New Product</h2>\n      <form onSubmit={onAddProduct}>\n        <div>\n          <label htmlFor=\"name\">Name</label>\n          <input\n            type=\"text\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            id=\"name\"\n          />\n        </div>\n        <div>\n          <label htmlFor=\"name\">Price</label>\n          <input\n            type=\"text\"\n            value={price}\n            onChange={(e) => setPrice(e.target.value)}\n            id=\"name\"\n          />\n        </div>\n        <div>\n          <label htmlFor=\"number_in_stock\">In Stock</label>\n          <input\n            type=\"number\"\n            value={inStock}\n            onChange={(e) => setInStock(e.target.value)}\n            id=\"number_in_stock\"\n          />\n        </div>\n        <div>\n          <label htmlFor=\"name\">Description</label>\n          <input\n            type=\"text\"\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n            id=\"name\"\n          />\n        </div>\n        <button>Add</button>\n      </form>\n    </div>\n  );\n};\n\nexport default ProductForm;\n","import React from 'react';\nimport Product from './Product';\nimport Togglable from './Togglable';\nimport ProductForm from './ProductForm';\n\nconst ProductTable = ({\n  products,\n  addProduct,\n  display,\n  removeProduct,\n  productFormRef,\n}) => {\n  const productDiv = (\n    <Togglable buttonName=\"Add Product\" ref={productFormRef}>\n      <ProductForm addProduct={addProduct} />\n    </Togglable>\n  );\n\n  if (products.length > 0) {\n    return (\n      <div style={{ display }}>\n        <table>\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Price</th>\n              <th>In Stock</th>\n              <th>Description</th>\n            </tr>\n          </thead>\n          <tbody>\n            {products.map((p) => (\n              <Product key={p.id} product={p} removeProduct={removeProduct} />\n            ))}\n          </tbody>\n        </table>\n        {productDiv}\n      </div>\n    );\n  } else {\n    return (\n      <div style={{ display }}>\n        No Products\n        {productDiv}\n      </div>\n    );\n  }\n};\n\nexport default ProductTable;\n","import React from 'react';\n\nconst Notification = ({ message, type }) => {\n  const color = type === 'success' ? 'green' : 'red';\n  return <h2 style={{ color }}>{message}</h2>;\n};\n\nexport default Notification;\n","import axios from 'axios';\n\nconst baseUrl = '/api/v1/products';\n\nlet token = null;\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`;\n};\n\nconst create = async (newProduct) => {\n  const config = {\n    headers: { Authorization: token },\n  };\n\n  const response = await axios.post(baseUrl, newProduct, config);\n  return response.data;\n};\n\nconst remove = async (productId) => {\n  const config = {\n    headers: { Authorization: token },\n  };\n\n  const response = await axios.delete(`${baseUrl}/${productId}`, config);\n  return response.data;\n};\n\nexport default { create, remove, setToken };\n","import React, { useState, useRef } from 'react';\nimport ProductTable from './ProductTable';\nimport Notification from './Notification';\nimport productService from '../services/products';\n\nconst Category = ({ category, removeCategory }) => {\n  const [visible, setVisible] = useState(false);\n  const [products, setProducts] = useState(category.products);\n  const [notification, setNotification] = useState(null);\n\n  const productFormRef = useRef();\n  const confirmRemove = () => {\n    if (window.confirm(`Delete category: ${category.name}`)) {\n      removeCategory(category.id);\n    }\n  };\n\n  const handleAddProduct = async (productData) => {\n    try {\n      productFormRef.current.toggleVisibility();\n      const result = await productService.create({\n        ...productData,\n        category: category.id,\n      });\n      showNotification('Product successfully added', 'success');\n      setProducts(products.concat(result.data.product));\n    } catch (err) {\n      showNotification(err.message, 'error');\n    }\n  };\n\n  const handleRemoveProduct = async (productId) => {\n    try {\n      await productService.remove(productId);\n      showNotification('Product successfully removed', 'success');\n      setProducts(products.filter((p) => p.id !== productId));\n    } catch (err) {\n      showNotification(err.message, 'error');\n    }\n  };\n\n  const showNotification = (message, type) => {\n    setNotification({ message, type });\n\n    setTimeout(() => setNotification(null), 5000);\n  };\n\n  return (\n    <div>\n      {notification && <Notification {...notification} />}\n      <h4>{category.name}</h4>\n      <p>{category.description}</p>\n      <button onClick={() => setVisible(!visible)}>\n        {visible ? 'Hide Products' : 'Show Products'}\n      </button>\n      <ProductTable\n        display={visible ? 'block' : 'none'}\n        products={products}\n        addProduct={handleAddProduct}\n        removeProduct={handleRemoveProduct}\n        productFormRef={productFormRef}\n      />\n      <button onClick={confirmRemove}>Delete Category</button>\n    </div>\n  );\n};\n\nexport default Category;\n","import React from 'react';\nimport Category from './Category';\n\nconst CategoryList = ({ categories, addProduct, removeCategory }) => {\n  return (\n    <div>\n      <h2>Categories</h2>\n      <div>\n        {categories.map((cat) => (\n          <Category\n            key={cat.id}\n            category={cat}\n            addProduct={addProduct}\n            removeCategory={removeCategory}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default CategoryList;\n","import React, { useState } from 'react';\n\nconst LoginForm = ({ userLogin }) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const onFormSubmit = (e) => {\n    e.preventDefault();\n\n    userLogin({ username, password });\n\n    setUsername('');\n    setPassword('');\n  };\n\n  return (\n    <div>\n      <h2>Login</h2>\n      <form onSubmit={onFormSubmit}>\n        <div>\n          <label htmlFor=\"username\">Username</label>\n          <input\n            type=\"text\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            id=\"username\"\n          />\n        </div>\n        <div>\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            id=\"password\"\n          />\n        </div>\n        <button>Login</button>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","import axios from 'axios';\n\nconst baseUrl = '/api/v1/categories';\n\nlet token = null;\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`;\n};\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl);\n  return response.data;\n};\n\nconst create = async (newCategory) => {\n  const config = {\n    headers: { Authorization: token },\n  };\n\n  const response = await axios.post(baseUrl, newCategory, config);\n  return response.data;\n};\n\nconst remove = async (categoryId) => {\n  const config = {\n    headers: { Authorization: token },\n  };\n\n  const response = await axios.delete(`${baseUrl}/${categoryId}`, config);\n  return response.data;\n};\n\nexport default { setToken, getAll, create, remove };\n","import axios from 'axios';\n\nconst baseUrl = '/api/v1/login';\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials);\n  return response.data;\n};\n\nexport default { login };\n","import React, { useEffect, useState, useRef } from 'react';\nimport Togglable from './Togglable';\nimport CategoryForm from './CategoryForm';\nimport CategoryList from './CategoryList';\nimport LoginForm from './LoginForm';\nimport Notification from './Notification';\nimport categoryService from '../services/categories';\nimport productService from '../services/products';\nimport loginService from '../services/login';\n\nconst App = () => {\n  const [categories, setCategories] = useState([]);\n  const [user, setUser] = useState(null);\n  const [notification, setNotification] = useState(null);\n\n  useEffect(() => {\n    const loadCategories = async () => {\n      const result = await categoryService.getAll();\n      setCategories(result.data.categories);\n    };\n\n    loadCategories();\n  }, []);\n\n  const categoryFormRef = useRef();\n\n  const handleLogin = async (loginData) => {\n    try {\n      const user = await loginService.login(loginData);\n      window.localStorage.setItem('loggedInUser', JSON.stringify(user));\n      categoryService.setToken(user.token);\n      productService.setToken(user.token);\n      setUser(user);\n\n      showNotification(`${user.username} successfully logged in`, 'success');\n    } catch (err) {\n      showNotification(err.message, 'error');\n    }\n  };\n\n  const handleAddCategory = async (categoryData) => {\n    try {\n      categoryFormRef.current.toggleVisibility();\n      const result = await categoryService.create(categoryData);\n\n      setCategories(categories.concat(result.data.category));\n      showNotification('Category added successfully', 'success');\n    } catch (err) {\n      showNotification(err.message, 'error');\n    }\n  };\n\n  const handleRemoveCategory = async (categoryId) => {\n    try {\n      await categoryService.remove(categoryId);\n      setCategories(categories.filter((cat) => cat.id !== categoryId));\n      showNotification('Category removed successfully');\n    } catch (err) {\n      showNotification(err.message, 'error');\n    }\n  };\n\n  const showNotification = (message, type) => {\n    setNotification({ message, type });\n\n    setTimeout(() => setNotification(null), 5000);\n  };\n\n  if (user === null) {\n    return (\n      <div>\n        <LoginForm userLogin={handleLogin} />\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        {notification && <Notification {...notification} />}\n        <h1>Inventory App</h1>\n        <Togglable buttonName=\"Add Category\" ref={categoryFormRef}>\n          <CategoryForm addCategory={handleAddCategory} />\n        </Togglable>\n        <CategoryList\n          categories={categories}\n          removeCategory={handleRemoveCategory}\n        />\n      </div>\n    );\n  }\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}